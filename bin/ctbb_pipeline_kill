#!/usr/bin/env python3

# CTBB_Pipeline_Package is GPU Queuing Software
# Copyright (C) 2017 John Hoffman
#
# ctbb_pipeline_kill (this file) is part of CTBB_Pipeline and CTBB_Pipeline_Package.
# 
# CTBB_Pipeline is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# CTBB_Pipeline and CTBB_Pipeline_Package is distributed in the hope
# that it will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with CTBB_Pipeline and CTBB_Pipeline_Package.  If not, see
# <http://www.gnu.org/licenses/>.

import sys
import os

import tempfile

from subprocess import Popen, PIPE, STDOUT, call

if __name__=="__main__":

    pipeline_processes=['ctbb_simdose','ctbb_recon','ctbb_pipeline_daemon.py','ctbb_queue_item.py']
    
    fid=tempfile.TemporaryFile(mode='w+')
    
    # Get process list
    p=call(['ps','aux'],stdout=fid,stderr=fid,env={'LANG':'C'});
    fid.seek(0,0);
    output=fid.read()

    # Scan output killing processes as found
    for line in output.splitlines():
        for process_name in pipeline_processes:
            if process_name in line:
                pid=line.split()[1]
                print("Killing process %d" % int(pid))
                call(['kill',pid])
                
    fid.close()
